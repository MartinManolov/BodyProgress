@model List<PostViewModel>

@foreach (var post in Model)
{<div class="container-fluid, border-dark" style="border:groove; margin:70px" >
        @Html.AntiForgeryToken()
        <h6 class="h6"><a href="/Profiles/Info?username=@post.OwnerUsername">@post.OwnerUsername</a></h6>
        <p class="text-right">@post.Date.ToLocalTime()</p>
        <p>@post.TextContent</p>
        <div class="card-img">
            <img src="@post.ImageUrl" alt="@post.OwnerUsername BodyProgress" class="img-fluid"/>
        </div>
        <div class="container, border-dark" >
            <button name="like" data-PostId="@post.Id">Like</button>
            <button name="unlike"  data-PostId="@post.Id">Unlike</button>
            <a name="likesCount" id="@post.Id">
                Likes @post.Likes.Count
            </a>
        </div>
        <div name="@string.Format("{0}{1}", "CommentsContainer", post.Id)" class="container-fluid" style="width:stretch; max-height:200px; overflow:scroll;">
            @foreach (var comment in post.Comments)
            {
            <div name="Comments" id="@string.Format("{0}{1}", "commentDiv", comment.Id)" class="container-fluid , border" >
                <p id="@string.Format("{0}{1}", "commentInfo", comment.Id)" data-commentId="@comment.Id" name="CommentUserInfo">@comment.OwnerName  - @comment.Date.ToLocalTime() </p>
                <p>@comment.TextContent</p>
            </div>
            }
        </div>
        <div>
            
                <input class="form-control" id="@string.Format("{0}{1}", "comment", post.Id)" type="text" name="commentContent" value="" />
                <button type="submit" name="commentButton" data-postId="@post.Id">Add comment</button>
           
        </div>
        


    </div>
 <p></p>
 <p></p>
 <p></p>

}

@section Scripts{
    <script>

        function GetComments (postId) {
            $.ajax({
                type: 'GET',
                url: '/api/Comments',
                dataType: "json",
                data: { postId: postId },
                complete: function (data) {

                    $('[name=CommentsContainer' + postId + ']').children().remove();
                    //TODO: Visualizing of comments and delete.
                    $(data).each(function (i,element){
                        $(element.responseJSON).each(function (i, comment) {
                            
                            var formattedDate = new Date(comment.date).toLocaleString(window.navigator.language);
                            
                            var txtDiv = "<div name=Comments id=commentDiv" + comment.id + " class=\"container-fluid , border\" > </div>";
                            var txt1 = "<p id=commentInfo" + comment.id + " data-commentId=" + comment.id + " name=\"CommentUserInfo\">" + comment.ownerName + "  - " + formattedDate + "</p> <p>" + comment.textContent + "</p> ";
                            $('[name=CommentsContainer' + postId + ']').append(txtDiv).append(txt1);
                        });
                    });
                    scrollSmoothToBottom();
                }
            })
        }

        $(document).ready(function () {
            scrollSmoothToBottom();
            $('[name=commentButton]').on('click', AddComment);
        });
        function AddComment() {
            var postId = $(this).attr('data-postId');
            var textContent = $('#comment' + postId).val();
            token = $('[name=__RequestVerificationToken]').val();
            var comment = {'PostId': postId, 'TextContent': textContent };
            $.ajax({
                type: 'POST',
                url: '/api/Comments',
                data: JSON.stringify(comment),
                contentType: "application/json ; charset=utf-8",
                dataType: 'json',
                headers: {
                    "RequestVerificationToken": token
                },
                complete: function () {
                    $('#comment' + postId).val('');
                    GetComments(postId);
                },

            })

        }


        function GetLikes(postId) {
            $.ajax({
                type: 'GET',
                url: '/api/Likes',
                data: { postId: postId },
                success: function (data) {
                    $('#' + postId + '[name=likesCount]').text("Likes " + data);
                }
            })
        }


        $('[name=like]').on('click', Like);
        function Like() {
            var postId = $(this).attr('data-postId');
            var like = {'PostId': postId };
            token = $('[name=__RequestVerificationToken]').val();
            $.ajax({
                type: 'POST',
                url: '/api/Likes',
                data: JSON.stringify(like),
                contentType: "application/json ; charset=utf-8",
                dataType: 'json',
                headers: {
                    "RequestVerificationToken": token
                },
                complete: function () {
                    GetLikes(postId);
                }
            })
        }

        $('[name=unlike]').on('click', Unlike);
        function Unlike() {
            var postId = $(this).attr('data-postId');
            var like = {'PostId': postId };
            token = $('[name=__RequestVerificationToken]').val();
            $.ajax({
                type: 'Delete',
                url: '/api/Likes',
                data: JSON.stringify(like),
                contentType: "application/json ; charset=utf-8",
                dataType: 'json',
                headers: {
                    "RequestVerificationToken": token
                },
                complete: function () {
                    GetLikes(postId);
                }
            })
        }

        function scrollSmoothToBottom() {
            $('.container-fluid').animate({ scrollTop: $('.container-fluid').prop("scrollHeight")}, 500);
        }

    </script>
}