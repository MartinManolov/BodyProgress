@model ProfileViewModel
<div class="container-xl">
    <h1 class="text-center">@Model.Username</h1>
    <div class="custom-control-inline container-fluid">
        @if (Model.ProfilePicture == null)
        {
            <img class="img-fluid col-6" style="max-height:400px; max-width:300px;" src="~/DefaultProfilePicture.png" />
        }
        else
        {
            <img class="img-fluid col-6" style="max-height: 400px; max-width: 300px;" src="@Model.ProfilePicture" />
        }
    <p title="Goal" class="col-6">@Model.Goal</p>
    </div>
    @if (!Model.IsPublic && !Model.IsFriend)
    {
        <p class="text-center text-danger">This profile is not public.</p>
        @if (Model.IsReceivedRequest)
        {
            <p class="text-center text-secondary">You have friendship request from this user.</p>
            <button type="button" onclick="location.href='@Url.Action("AcceptFriend", "Friends",new {username = Model.Username })'" href="/Friends/AcceptFriend?username=@Model.Username" class="btn-success">Accept friend request</button>
            <button type="button" onclick="location.href='@Url.Action("RemoveFriend", "Friends",new {username = Model.Username })'" href="/Friends/RemoveFriend?username=@Model.Username" class="btn-danger">Refuse friend request</button>
        }
        else if (Model.IsSendedRequest)
        {
            <p class="text-center text-secondary">You have sended request for friendship.</p>
            <button type="button" onclick="location.href='@Url.Action("RemoveFriend", "Friends",new {username = Model.Username })'" href="/Friends/RemoveFriend?username=@Model.Username" class="btn-danger">Refuse friend request</button>
        }
        else
        {
            <button type="button" onclick="location.href='@Url.Action("AddFriend", "Friends",new {username = Model.Username })'" href="/Friends/AddFriend?username=@Model.Username" class="btn-success">Send friend request</button>
        }

    }
    else
    {
        <div class="container-fluid">
            <a class="btn btn-primary btn-lg" href="/Posts/VisitedUserPosts?visitedUserUsername=@Model.Username">Posts</a>
            @if (Model.IsFriend)
            {
                <button type="button" onclick="location.href='@Url.Action("RemoveFriend", "Friends",new {username = Model.Username })'" href="/Friends/RemoveFriend?username=@Model.Username" class="btn btn-danger btn-sm">
                    Remove friend
                </button>
            }
            else if (Model.IsReceivedRequest)
            {
                <span>
                    You have friendship request
                    <button type="button" onclick="location.href='@Url.Action("AcceptFriend", "Friends",new {username = Model.Username })'" href="/Friends/AcceptFriend?username=@Model.Username" class="btn btn-success">Accept friend request</button>
                    <button type="button" onclick="location.href='@Url.Action("RemoveFriend", "Friends",new {username = Model.Username })'" href="/Friends/RemoveFriend?username=@Model.Username" class="btn btn-danger btn-sm">Refuse friend request</button>
                </span>
            }
            else if (Model.IsSendedRequest)
            {
                <span class="text-secondary text-info">
                    You have sended request for friendship.
                    <button type="button" onclick="location.href='@Url.Action("RemoveFriend", "Friends",new {username = Model.Username })'" href="/Friends/RemoveFriend?username=@Model.Username" class="btn btn-danger btn-sm">
                        Refuse friend request
                    </button>
                </span>
            }
            else
            {
                <button type="button" onclick="location.href='@Url.Action("AddFriend", "Friends",new {username = Model.Username })'" href="/Friends/AddFriend?username=@Model.Username" class="btn-success">Send friend request</button>
            }
        </div>
        <div class="container-xl row">
            <div class="container-fluid col" style="width:fit-content; height:300px; overflow-y:scroll;">
                @await Component.InvokeAsync("ProfileWorkouts", Model.Username)
            </div>
            <div class="container-fluid col" style="width:fit-content; height:300px; overflow-y:scroll;">
                @await Component.InvokeAsync("ProfileMeals", Model.Username)
            </div>
            <div class="container-fluid col" style="width:fit-content; height:300px; overflow-y:scroll;">
                @await Component.InvokeAsync("ProfileBodyStatistics", Model.Username)
            </div>
        </div>
    }
</div>